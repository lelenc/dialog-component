{"version":3,"file":"translation.js","sourceRoot":"","sources":["../../../src/language/translation.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,MAAc,EAAmC,EAAE;EACtF,IAAI,QAAQ,GAA2B,EAAE,CAAC;EAE1C,IAAI,MAAM,KAAK,IAAI,EAAE;IACnB,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,uCAAuC,CAAC,CAAC;IACvE,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;GAC7B;OAAM,IAAI,MAAM,KAAK,IAAI,EAAE;IAC1B,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,uCAAuC,CAAC,CAAC;IACvE,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;GAC7B;EAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,OAAe,EAAE,MAAgB,EAAU,EAAE;EACnF,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;IACnD,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;EAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["export const getIntlMessage = async (locale: string): Promise<Record<string, string>> => {\r\n  let messages: Record<string, string> = {};\r\n\r\n  if (locale === 'en') {\r\n    const response = await import(`../assets/locales/en.translation.json`);\r\n    messages = response.default;\r\n  } else if (locale === 'hu') {\r\n    const response = await import(`../assets/locales/hu.translation.json`);\r\n    messages = response.default;\r\n  }\r\n\r\n  return messages;\r\n};\r\n\r\nexport const getIntlMessageFormatted = (message: string, values: string[]): string => {\r\n  return message.replace(/{(\\d+)}/g, (_match, index) => {\r\n    return values[index] || '';\r\n  });\r\n};"]}