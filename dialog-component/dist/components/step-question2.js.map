{"file":"step-question2.js","mappings":"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","names":[],"sources":["./src/components/step-question/step-question.css?tag=step-question","./src/components/step-question/step-question.tsx"],"sourcesContent":[":host {\r\n\tdisplay: block;\r\n}\r\n\r\n.question {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 1.25rem;\r\n\tmargin-top: 1.25rem;\r\n}\r\n\r\n.speech-bubble-triangle {\r\n\tdisplay: flex;\r\n\tmax-width: 84%;\r\n}\r\n\r\n.triangle-topleft {\r\n\tborder-top: 7px solid var(--special-inactive);\r\n\tborder-left: 7px solid transparent;\r\n}\r\n\r\n.speech-bubble-question {\r\n\tbackground: var(--background-white-bg);\r\n\tborder: 1px solid var(--special-inactive);\r\n\tborder-radius: 0px 10px 10px 10px;\r\n\tpadding: 0.625rem;\r\n}\r\n\r\n.speech-bubble-question.active {\r\n\tbackground: var(--background-warning-bg);\r\n}\r\n\r\n.speech-bubble-question.opened {\r\n\tborder-width: 3px;\r\n}\r\n\r\n.infoicon {\r\n\tmargin-left: 0.625rem;\r\n\tcolor: var(--brand-main-brand);\r\n}\r\n\r\n.clickable {\r\n\tcursor: pointer;\r\n}\r\n\r\nion-popover.full-size {\r\n\t--width: calc(100vw - var(--page-margin) * 2);\r\n\t--box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.6);\r\n\t--border-radius: 20px;\r\n\t--overflow: hidden;\r\n\r\n\t--width: calc(100%);\r\n\t--margin-left: auto;\r\n\t--margin-right: auto;\r\n}\r\nion-popover.full-size::part(content) {\r\n\tmargin: var(--page-margin);\r\n\tleft: 0;\r\n\tborder-radius: 10px;\r\n}\r\nion-popover.full-size::part(backdrop) {\r\n\tbackground-color: var(--special-transparent);\r\n}\r\n\r\nion-popover.full-size.error::part(backdrop) {\r\n\tbackground-color: var(--background-medium-light-bg);\r\n}\r\n\r\nion-popover.full-size::part(arrow) {\r\n\tdisplay: none;\r\n}\r\nion-popover h1 {\r\n\tmargin: 0 0 10px 0;\r\n}\r\nion-popover ion-content {\r\n\t--background: #ecebeb;\r\n}\r\n\r\nion-popover.error ion-content {\r\n\t--background: var(--background-white-bg);\r\n}\r\n\r\nion-popover.warning ion-content {\r\n\t--background: var(--special-warning);\r\n}\r\n","import { popoverController } from '@ionic/core';\r\nimport { Component, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Fragment } from '../../interfaces/dialog-interfaces';\r\n\r\n@Component({\r\n  tag: 'step-question',\r\n  styleUrl: 'step-question.css',\r\n  shadow: false,\r\n})\r\nexport class StepQuestion {\r\n  @Prop() fragment: Fragment;\r\n  @Prop() isActiveQuestion: boolean;\r\n\r\n  @State() showContent = false;\r\n  @State() isTooltipOpened = false;\r\n\r\n  @Watch('fragment')\r\n  handleFragmentValueChange() {\r\n    this.showContent = false;\r\n    setTimeout(() => {\r\n      this.showContent = true;\r\n    }, 1000); // 200ms késleltetés\r\n    console.log(\"q-fragment\")\r\n  }\r\n\r\n  hasTooltip(): boolean {\r\n    return !!this.fragment.descriptionLayman;\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    this.showContent = false;\r\n    setTimeout(() => {\r\n      this.showContent = true;\r\n    }, 200); // 200ms késleltetés\r\n    console.log(\"componentWillLoad-q\")\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  async presentPopover(ev: Event) {\r\n    if (this.fragment.descriptionLayman.trim() !== '') {\r\n      const buttonId = `button-${this.fragment.iri}`; // Az egyedi gomb ID-je\r\n      const button = document.getElementById(buttonId); // A gomb elem lekérése\r\n      console.log(button)\r\n\r\n      if (!button) {\r\n        return; // Kilépés, ha nem található a gomb elem\r\n      }\r\n\r\n      const popover = await popoverController.create({\r\n        component: 'ion-popover',\r\n        event: ev,\r\n        alignment: \"center\",\r\n        translucent: true,\r\n        showBackdrop: false,\r\n        cssClass: 'full-size',\r\n        animated: true,\r\n        componentProps: {}\r\n      });\r\n\r\n      const popoverContent = document.createElement('ion-content');\r\n      popoverContent.classList.add(\"ion-padding\");\r\n      popoverContent.innerHTML = this.fragment.descriptionLayman;\r\n\r\n      popover.appendChild(popoverContent);\r\n\r\n      //const rect = button.getBoundingClientRect();\r\n\r\n      //popover.style.top = rect.bottom + 'px';\r\n      //popover.style.left = rect.left + 'px';\r\n      popover.onDidDismiss().then(() => {\r\n        this.isTooltipOpened = false;\r\n      });\r\n\r\n      this.isTooltipOpened = true;\r\n      await popover.present();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const svgWidth = '1.5em'; // A szélesség beállítása\r\n    const svgColor = \"#2B7371\"; // A szín beállítása\r\n    const svgPath = \"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n    const svgViewBox = \"0 0 512 512\"\r\n\r\n    if (!this.hasTooltip()) {\r\n      return (\r\n        <div class={`question fade-in left ${this.showContent ? 'show' : ''}`}>\r\n          <div class=\"speech-bubble-triangle\">\r\n            <div class=\"triangle-topleft\"></div>\r\n            <span class={{ \"speech-bubble-question\": true, \"active\": this.isActiveQuestion }} innerHTML={this.fragment.labelLayman} ></span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class={`question fade-in left ${this.showContent ? 'show' : ''}`}>\r\n        <div class=\"speech-bubble-triangle\">\r\n          <div class=\"triangle-topleft\"></div>\r\n          <span class={{ \"speech-bubble-question\": true, \"active\": this.isActiveQuestion, \"opened\": this.isTooltipOpened }} innerHTML={this.fragment.labelLayman} ></span>\r\n        </div>\r\n        <svg id={`button-${this.fragment.iri}`} class=\"infoicon clickable\" width={svgWidth} viewBox={svgViewBox} onClick={(ev) => this.presentPopover(ev)} >\r\n          <path d={svgPath} fill={svgColor} />\r\n        </svg>\r\n\r\n      </div>\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n"],"version":3}