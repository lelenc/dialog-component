import { Answer, ConsultationResult, DialogData, DialogMetadata, Fragment, Result } from '../../interfaces/dialog-interfaces';
export declare class DialogComponent {
  private dialogAsyncService;
  private elasticService;
  private helperService;
  private answer$;
  private revoke$;
  private endDate;
  private startDate;
  private user;
  locale: string;
  lastLocale: string;
  private messages;
  caseId: string;
  iri: string;
  date: string;
  player_id: number;
  education?: string;
  sex?: number;
  birthyear?: number;
  region: number;
  email: string;
  params: Map<string, string>;
  dialogData: DialogData;
  dialogMetadata: DialogMetadata;
  fragmentData: Fragment[];
  result: Result;
  loadMessages(): Promise<void>;
  constructor();
  componentWillLoad(): Promise<void>;
  componentDidLoad(): Promise<void>;
  answersFromParams(): Answer[];
  startWithCaseId(caseId: string, date: string): Promise<void>;
  startWithIri(iri: string): Promise<void>;
  initSubscriptions(): void;
  presentPopover(): Promise<void>;
  reloadPage(): void;
  processNextQuestion(q: any): void;
  processRevoke(r: any): void;
  scrollToLast(): void;
  handleAnswer({ detail: answer }: CustomEvent<Answer>): void;
  handleRevoke({ detail: answer }: CustomEvent<Answer>): void;
  saveAuto(): void;
  saveDialog(): ConsultationResult;
  sendData(body: ConsultationResult): Promise<void>;
  render(): any;
}
